# OpenOnDemand on Alpine {#sec-ondemand}

If you have an account on Alpine, there is a cool way to connect to Alpine through
a web browser.  This provides a nice way to access your files and do light copying,
etc.  But, more importantly, this method allows you to
interact with your files and projects on the cluster in the
familiar RStudio framework.  This also provides a useful way for running your own
R projects and handling git in R projects on the cluster.  Really, I suspect
this will be life-changing for many folks that are very familiar with RStudio and wish
that they could run analyses in R, using RStudio, on the cluster, just like
they do on their laptop or desktop machines.

The approach uses a _browser-based_
portal to the Alpine computing cluster that is supported by CURC and is called
_Open OnDemand_.  As a _browser-based_ system, you will connect to Alpine via
your web browser. Ultimately, you will be able to run a session of RStudio Server
that runs on a compute node on Alpine, interacting with your filesystem on the cluster
the way you would with local files using any RStudio session on your laptop.  Additionally,
you can drive git and get a terminal shell through RStudio server as well.  It is pretty
slick if you are comfortable in an RStudio environment.


Full details about OpenOndemand on Alpine can be found at the CURC website
[here](https://curc.readthedocs.io/en/latest/gateways/OnDemand.html), with a
whole section
about RStudio [here](https://curc.readthedocs.io/en/latest/gateways/OnDemand.html#rstudio).


## Getting onto RStudio Server on Alpine 

In order to establish an RStudio session container/image/overlay, the Alpine administrators
recommend using 4 cores, because the initial setup can take a few minutes.
After that you can re-attach to that image quickly and use just a single core if you
would like.  Briefy instructions on how to do that are:

1. In your web browser, go to [https://ondemand-rmacc.rc.colorado.edu/](https://ondemand-rmacc.rc.colorado.edu/).
1. The first time you click that, it will take you to a page where you must choose which institution's
OpenOnDemand infrastructure you are accessing.  Choose `Colorado State University`, from
the pop-up menu and be sure to
select "Remember this selection" and then click "Log On".  
![](./images/colostate-open-ondemand.png)
2. That should redirect you to your CSU NetID login page.  Authenticate yourself.
3. That should drop you into the CURC OnDemand Dashboard page that looks like this:  
![](./images/curc-on-demand-dashboard.png)
4. Choose "Interactive Apps-->RStudio Server Presets", then use the bottom toggle
box to choose "4 cores, 4 hours", and hit "Launch".  This will start making
you an RStudio Server container.  Again, we choose 4 cores just for the initial
setup, but you can choose 1 core in the future.  
![](./images/rstudio-server-preset.png)
5. Now, go to your "Interactive Sessions" and you will see messages about your
session starting up. Once your session is ready you can connect to it by clicking
"Connect to RStudio Server"  
![](./images/rstudio-interactive-sessions-tab.png)
6. Voila!  Clicking "Connect to RStudio Server" opens a new tab with
an RStudio window that is pretty much what you are used to.

## Working in RStudio

Note that you can, if you would like, open an RStudio project you have on
Alpine by going to the "Project" tab in the upper right (or choosing
`File -> Open Project...` from the main menu) and navigating your
way to the .Rproj file.   This means that you could interact with your
con-gen-csu repo on Alpine as an Rstudio Project.  The possibilities are
endless.  You can open as many files on the cluster as you wish in the RStudio
source-code editor window, and edit them with RStudio, making changes directly
to them on the cluster.  You have a graphical interface to git, that is familiar, and you
can also get to a shell in the "Terminal" tab.  You also have an active R session
on the cluster in case you want to analyze any data you have on the cluster with
R.

Note that if you open up files in Rstudio on Alpine that Rstudio recognizes
as shell script files (because they have a `.sh` extension), then choosing
CMD-Return (on a Mac) or cntrl-Return (on a PC) will send the line that your
cursor is on to the Terminal shell (in much the same way that you can evaluate
R code from an R script in the R console within RStudio).  This provides a very
handy way to test your shell scripts line by line on the Alpine bash shell.

At the time of this writing, I have not been able to load the slurm/alpine
module in the RStudio Terminal to allow submission of jobs via `sbatch` in this
environment, but I can keep you posted. In the meantime, you can always get
a shell in your browser (see the next section).


## Other places to go from the Dashboard

We should also mention that if you go to the "Files" tab on the original
OnDemand Dashboard page, you get a nice web-browser-based file browser of
your files on Alpine.  This can be a good way to transfer a couple of small
files here and there, but don't transfer too much.  For big files, or for
transferring things to scratch, you should
use globus, as explained [here](https://curc.readthedocs.io/en/latest/gateways/OnDemand.html#files).

Finally, from you Alpine dashboard in your browser, you can even get a shell
(in your browser) on Alpine.  Do that by selecting "`Clusters--> >_Alpine Shell`.
It is a fully functional shell terminal in your browser.  Apparently you can even
get to this on your phone or tablet browswer.  (Just when you thought cluster computing
couldn't intrude any more on your life than it currenly is---it is gonna get you via
your phone).

In the shell, you can choose different color themes from the selector in the upper right.
Also, you can open as many shells as you want---each one will go in a new browser tab.

Enjoy!


